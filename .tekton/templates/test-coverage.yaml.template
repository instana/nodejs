apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: test-coverage
spec:
  {{sidecars}}
  envFrom:
    - configMapRef:
        name: environment-properties  
  params:
    - name: node-version
      value: $(params.node-version)
    - name: npm-version
      value: $(params.npm-version)
    - name: repository
      value: $(params.repository)
    - name: revision
      value: $(params.revision)
    - name: continuous-delivery-context-secret
      value: $(params.continuous-delivery-context-secret)
  workspaces:
    - name: output
      mountPath: /artifacts
  steps:
    - name: execute
      env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: "AWS_ACCESS_KEY_ID"
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: "AWS_SECRET_ACCESS_KEY"              
        - name: DB2_CONNECTION_STR
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: "DB2_CONNECTION_STR"
        - name: GOOGLE_APPLICATION_CREDENTIALS_CONTENT
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: "GOOGLE_APPLICATION_CREDENTIALS_CONTENT"
        - name: AZURE_SQL_PWD
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: "AZURE_SQL_PWD"            
      image: node:$(params.node-version)
      script: |
        #!/bin/bash
        ARTIFACTS_PATH="$(workspaces.output.path)"
        cd $ARTIFACTS_PATH

        if [ -n "$(params.npm-version)" ]; then
          npm install npm@$(params.npm-version) -g
        fi
                
        export CI=true
        export GCP_PROJECT="k8s-brewery"
        export AZURE_SQL_USERNAME="admin@instana@nodejs-db-server"
        export AZURE_SQL_SERVER="nodejs-db-server.database.windows.net"
        export AZURE_SQL_DATABASE="azure-nodejs-test"

        npm run coverage-all

        if [ $? -eq 0 ]; then
          npx eslint packages/ -f json > eslint-report.json || exit 0
          npx sonarqube-scanner

          exit 0
        else
          exit 1
        fi