---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: toolchain-extract-value
spec:
  params:
    - name: config-map-name
      description: name of the config map
      default: toolchain
    - name: config-map-key
      description: key of the config map
      default: toolchain.json
    - name: expression
      description: A valid jq expression which is used to search
    - name: extract-value-jq-step-image
      description: image to use for the extract-value-jq step (default to icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.29)
      default: "icr.io/continuous-delivery/pipeline/pipeline-base-ubi:3.29"
    - name: pipeline-debug
      description: Pipeline debug mode
      default: "0"
    - name: raw
      description: determines if extracted value should be a raw string
      default: "1"
  results:
    - name: extracted-value
      description: The extracted value
  stepTemplate:
    env:
      - name: PIPELINE_DEBUG
        value: $(params.pipeline-debug)
  steps:
    - name: extract-value-jq
      image: $(params.extract-value-jq-step-image)
      imagePullPolicy: IfNotPresent
      env:
        - name: RAW
          value: $(params.raw)
      command: ["/bin/bash", "-c"]
      args:
        - |
          #!/bin/bash
          set -e -o pipefail;

          if [ $PIPELINE_DEBUG == 1 ]; then
            pwd
            env
            trap env EXIT
            set -x
          fi

          jq $([ "$RAW" == 1 ] && echo -r) '$(params.expression)' /cd-config/$(params.config-map-key) | tr -d '\n' | tee $(results.extracted-value.path)

          file_size=$(du -b $(results.extracted-value.path) | awk '{print $1}')
          file_lines=$(wc -l $(results.extracted-value.path) | awk '{print $1}')

          if [ $file_lines -gt 80 ] || [ $file_size -gt 2048 ]; then
            echo "Error: The extracted value is over 2048 Bytes or 80 lines - It can't be stored in result."
            exit 1
          fi

      volumeMounts:
        - mountPath: /cd-config
          name: cd-config-volume
  volumes:
    - name: cd-config-volume
      configMap:
        name: $(params.config-map-name)