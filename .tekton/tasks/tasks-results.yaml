apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: tasks-results
spec:
  workspaces:
    - name: output
      mountPath: /artifacts
  params:
    - name: properties-file
      default: build.properties
    - name: node-version
      value: $(params.node-version)
    - name: continuous-delivery-context-secret
      value: $(params.continuous-delivery-context-secret)
    - name: coverage
      default: "true"
    - name: pr-number
      default: ""
    - name: pr-branch
      default: ""
    - name: target-branch
      default: "main"
  steps:
    - name: print-all-results
      image: public.ecr.aws/docker/library/node:$(params.node-version)
      imagePullPolicy: IfNotPresent
      env:
        - name: PROPERTIES_FILE
          value: $(params.properties-file)
        - name: SONAR_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.continuous-delivery-context-secret)
              key: "SONAR_TOKEN"
      script: |
        #!/bin/bash
        set -e

        ARTIFACTS_PATH="$(workspaces.output.path)"
        cd $ARTIFACTS_PATH

        # Pipeline result
        if find "$ARTIFACTS_PATH" -maxdepth 1 -type f -name '*.failed' | grep -q .; then
          echo "PIPELINE_RESULT=Failed"
          echo "PIPELINE_RESULT=Failed" >> $ARTIFACTS_PATH/$PROPERTIES_FILE
        else
          echo "PIPELINE_RESULT=Succeeded"
          echo "PIPELINE_RESULT=Succeeded" >> $ARTIFACTS_PATH/$PROPERTIES_FILE
        fi

        echo "=========before===================="
          echo "Running SonarCloud PR analysis"
          echo "PR Number: $(params.pr-number)"
          echo "PR Branch: $(params.pr-branch)"
          echo "Target Branch: $(params.target-branch)"
          echo "=============================="

        if [ "$(params.coverage)" == "true" ]; then
          echo "Running ESLint..."
          npx eslint packages/ -f json -o eslint-report.json || true

          echo "Installing SonarCloud scanner..."
          npm install -g @sonar/scan

          echo "Running SonarCloud analysis..."
          if [ -n "$(params.pr-number)" ]; then
            echo "=============================="
            echo "Running SonarCloud PR analysis"
            echo "PR Number: $(params.pr-number)"
            echo "PR Branch: $(params.pr-branch)"
            echo "Target Branch: $(params.target-branch)"
            echo "=============================="
            sonar -Dsonar.login=$SONAR_TOKEN \
                  -Dsonar.pullrequest.key=$(params.pr-number) \
                  -Dsonar.pullrequest.branch=$(params.pr-branch) \
                  -Dsonar.pullrequest.base=$(params.target-branch)
          else
            # Main branch analysis
            sonar -Dsonar.login=$SONAR_TOKEN
          fi
        fi