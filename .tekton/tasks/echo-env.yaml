apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: echo-env
spec:
  params:
    - name: target-branch
      value: $(params.target-branch)
    - name: node-version
      value: $(params.node-version)
    - name: npm-version
      value: $(params.npm-version)
    - name: prerelease
      value: $(params.prerelease)   
      default: ""
    - name: prerelease-node-version
      value: $(params.prerelease-node-version)   
      default: ""
  workspaces:
    - name: output
      mountPath: /artifacts
  steps:
    - name: execute
      image: node:22
      script: |
        #!/bin/bash

        ARTIFACTS_PATH="$(workspaces.output.path)"
        echo "Listing current directory contents before cd:"
        ls -la

        echo "Changing directory to $ARTIFACTS_PATH"
        cd $ARTIFACTS_PATH || { echo "Failed to change directory to $ARTIFACTS_PATH"; exit 1; }

        # List the contents of the artifacts directory
        echo "Listing contents of $ARTIFACTS_PATH:"
        ls -la

        echo "Searching for .tekton directory..."
        if [ -d ".tekton" ]; then
          echo "Found .tekton directory."
          
          # Check for the install script
          if [ -f ".tekton/install-prerelease.sh" ]; then
            chmod +x .tekton/install-prerelease.sh
            echo "Executing .tekton/install-prerelease.sh"
            ./.tekton/install-prerelease.sh "$(params.prerelease-node-version)"
          else
            echo "Error: .tekton/install-prerelease.sh not found."
            exit 1
          fi
        else
          echo "Error: .tekton directory not found."
          exit 1
        fi

        echo "Node: $(node --version)"

        if [ -n "$(params.npm-version)" ]; then
          npm install npm@$(params.npm-version) -g
        fi

        echo "NPM: $(npm --version)"
