apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: echo-env
spec:
  params:
    - name: node-version
      value: $(params.node-version)
    - name: npm-version
      value: $(params.npm-version)
    - name: prerelease
      value: $(params.prerelease)
  workspaces:
    - name: output
      mountPath: /artifacts
  steps:
    - name: execute
      image: node:$(params.node-version)
      script: |
        #!/bin/bash

         NODE_VERSION="v23"
        mirrors=("https://nodejs.org/download/rc" "https://nodejs.org/download/nightly")

        if [ -n "$(params.prerelease)" ]; then
          echo "Proceeding with Node.js version: $NODE_VERSION"

            if ! command -v nvm &> /dev/null; then
              echo "NVM not found. Installing NVM..."
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash

              # Load NVM
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            else
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            fi

            for mirror in "${mirrors[@]}"; do
              NVM_NODEJS_ORG_MIRROR="$mirror" nvm install "$NODE_VERSION" && break || \
              echo "Installation failed with mirror: $mirror"
            done

            if ! nvm ls "$NODE_VERSION" >/dev/null; then
              echo "Both RC and Nightly installations failed for Node.js version $NODE_VERSION."
            fi

            nvm use "$NODE_VERSION"
            echo "Currently using node: $(node --version)"
        else
            echo "Skipping prerelease version and using default version"

            if [ -n "$(params.npm-version)" ]; then
              npm install npm@$(params.npm-version) -g
            else
              npm install npm -g
            fi
        fi

        echo "Node: $(node --version)"
        echo "NPM: $(npm --version)"
