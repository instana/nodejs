apiVersion: tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: custom-template
spec:
  envFrom:
    - configMapRef:
        name: environment-properties
  params:
    - name: repository
      description: The git repo
    - name: branch
      description: branch
    - name: type
      description: type
    - name: pipeline-debug
      description: toggles debug mode for the pipeline
      default: "0"
    - name: ibmcloud-api
      description: the ibmcloud api
      default: https://cloud.ibm.com
    - name: pr-branch
      description: The branch in the forked git repo from where the PR is made
    - name: pr-repository
      description: The branch in the forked git repo from where the PR is made
    - name: pr-number
      description: The branch in the forked git repo from where the PR is made
    - name: commit-id
      description: SHA
    - name: node-version
      value: $(params.node-version)
    - name: npm-version
      value: $(params.npm-version)      
    - name: target-branch
      description: "Either pr branch or any other branch."
    - name: sanitized-target-branch
      description: "target-branch with underscores replaced by hyphens"
      value: $(extensions.sanitized-target-branch)
    - name: pl-name
      value: $(params.pl-name)
    - name: pipeline-ref
      value: $(params.pipeline-ref)
    - name: esm
      value: $(params.esm)
      default: "false"
    - name: coverage
      default: "false"
      value: $(params.coverage)
    - name: skip-cache
      default: "false"
      value: $(params.skip-cache)
    - name: context
      default: "node-$(params.node-version)"
      value: $(params.context)
    - name: prerelease
      value: $(params.prerelease)   
      default: "false"
  extensions:
    sanitized-target-branch: 'params["target-branch"].replaceAll("_", "-")'
  resourcetemplates:
    - apiVersion: v1
      kind: ConfigMap
      metadata:
        name: debug-branch-names-$(uid)
      data:
        original-branch: $(params.target-branch)
        sanitized-branch: $(params.sanitized-target-branch)
    - apiVersion: tekton.dev/v1beta1
      kind: Task
      metadata:
        name: print-branch-debug-$(uid)
      spec:
        steps:
          - name: print-branch-names
            image: alpine
            script: |
              echo "Original branch name: $(params.target-branch)"
              echo "Sanitized branch name: $(params.sanitized-target-branch)"
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: pvc-$(params.sanitized-target-branch)-$(uid)-artifacts
      spec:
        resources:
          requests:
            storage: 5Gi
        volumeMode: Filesystem
        accessModes:
          - ReadWriteOnce
    - apiVersion: tekton.dev/v1alpha1
      kind: ConcurrencyControl
      metadata:
        name: cc
        namespace: concurrency
      spec:
        selector:
          matchLabels:
            type: pull-request
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      podTemplate:
        securityContext:
          fsGroup: 65532
      metadata:
        name: pl-$(params.sanitized-target-branch)-$(params.pl-name)
        namespace: concurrency
        labels:
          type: pull-request
        annotations:
          tekton.dev/node-version: "node-$(params.node-version)"
      spec:
        workspaces:
          - name: artifacts
            persistentVolumeClaim:
              claimName: pvc-$(params.sanitized-target-branch)-$(uid)-artifacts
        taskRunSpecs:
          - pipelineTaskName: print-debug
            taskRef:
              name: print-branch-debug-$(uid)
        pipelineSpec:
          workspaces:
            - name: artifacts
          tasks:
            - name: print-debug
              taskRef:
                name: print-branch-debug-$(uid)
            - name: main-pipeline
              runAfter:
                - print-debug
              taskRef:
                name: $(params.pipeline-ref)
              workspaces:
                - name: artifacts
                  workspace: artifacts
              params:
                - name: repository
                  value: $(params.repository)
                - name: branch
                  value: $(params.branch)
                - name: pipeline-debug
                  value: $(params.pipeline-debug)
                - name: ibmcloud-api
                  value: $(params.ibmcloud-api)
                - name: pr-repository
                  value: $(params.pr-repository)
                - name: pr-branch
                  value: $(params.pr-branch)
                - name: pr-number
                  value: $(params.pr-number)
                - name: commit-id
                  value: $(params.commit-id)
                - name: node-version
                  value: $(params.node-version)
                - name: npm-version
                  value: $(params.npm-version)
                - name: target-branch
                  value: $(params.target-branch)
                - name: sanitized-target-branch
                  value: $(params.sanitized-target-branch)
                - name: type
                  value: $(params.type)
                - name: esm
                  value: $(params.esm)
                - name: coverage
                  value: $(params.coverage)
                - name: context
                  value: $(params.context)
                - name: skip-cache
                  value: $(params.skip-cache)
                - name: prerelease
                  value: $(params.prerelease)

# Made with Bob
