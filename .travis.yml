language: node_js
sudo: required
services:
  - docker

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.8

node_js:
  - v4
  - v6
  - v8
  - v10
  - v11

before_script:
  # When running tests in Node.js 8, we pin grpc to exactly 1.10.1.
  # For more recent Node.js versions (>= 10) we use the latest 1.x as stated in package.json. We can't use grcp@1.10.1
  # in Node.js 10 since it fails to build under Node.js >= 10. We still want to explicitly test the combination of
  # Node.js 8 with grpc@1.10.1 for reasons.
  - '([[ $(node -v) =~ ^v8.*$ ]] && npm install grpc@1.10.1) || true'
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  - docker-compose kill && docker-compose rm -f && docker-compose up -d
  - sleep 45

script:
  # npm audit was introduced in npm 6. We also actually don't need to run it for every Node.js version, running it for
  # one version would be enough.
  - '[[ $(npm -v) =~ ^2.*$ ]] || [[ $(npm -v) =~ ^3.*$ ]] || [[ $(npm -v) =~ ^4.*$ ]] || [[ $(npm -v) =~ ^5.*$ ]] || npm run audit'
  - npm test

after_failure:
  - docker ps
  - docker-compose logs

env:
  global:
    - ELASTICSEARCH=127.0.0.1:9200
    - MONGODB=127.0.0.1:27017
    - ZOOKEEPER=127.0.0.1:2181
    - KAFKA=127.0.0.1:9092
    - REDIS=127.0.0.1:6379
    - MYSQL_HOST=127.0.0.1
    - MYSQL_PORT=3306
    - MYSQL_USER=node
    - MYSQL_PW=nodepw
    - MYSQL_DB=nodedb
    - POSTGRES_HOST=127.0.0.1
    - POSTGRES_USER=node
    - POSTGRES_PASSWORD=nodepw
    - POSTGRES_DB=nodedb
    - CXX=g++-4.8

notifications:
  slack:
    rooms:
      secure: qUOObzw7iyWo/jALEDDvrPQXeTiq8XU3us2F1gmeBXglGQJhoAhdmNvoQeDN4b1VIZ9hMcaF8drHJqTSgSfWmvWZxTwFYGOMPRNziw+v8Ca9TfXz9y1J1U1BNXHQ1PD7YaMEyXD0Vo8EmuCmHUA48aL1Nk+fOxoi7jIrXMwf55o6F/DIreVx6Wm1jRA5DjvOkifrayUVaIrYH/hKampKJfV5a+36mm4x/F2U5Q8D7zdkPcDV3X/TwkF7jNz7FqYQp4Ae+C5HkopJduFna8rfvvkFCRyBbhisqHcOokyQ4grlwtl0hTdw3SOwNKu6dA7H+kop2W4bvNCcVQWZhJeScS7/EZbr1f5SGb8C6IEDvjZau/+JejR/x1B8zTZlDPcsaC6JEoFd5jMapWLGVYBMihcrEtVFjWNqJL/c7W2wr56x+puYAZCFN3E2RsR04+NRgUfQXqntk5GGq7I+RRd1uQyuDmYT1TfBq/ifOctKH/6oc2aUcaYfCWhEVWWhRfnxoFfAaQrHWSUxkSY4PWlYorGH9IiuWtgk5pW0qDAVQ7tEhgcxvFLn+6AbFRQ7Oztx0epDWRN7/I+5Xln11KAgswGx+BIXkzqJP4lFhN5D1c0P6NC45TbI37OF5vglJs/5Kr3lSVdtAESwF1nSbxnlSCp4VYn4Zps1KCukLPWpeJU=
