{
  "name": "@instana/root",
  "private": true,
  "description": "A monorepo for various Instana Node.js tracing and metrics collector packages",
  "author": {
    "name": "Bastian Krol",
    "email": "bastian.krol@instana.com"
  },
  "homepage": "https://github.com/instana/nodejs",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/instana/nodejs.git"
  },
  "bugs": {
    "url": "https://github.com/instana/nodejs/issues"
  },
  "workspaces": [
    "packages/*"
  ],
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0"
  },
  "contributors": [
    {
      "name": "Katharina Irrgang",
      "email": "katharina.irrgang@ibm.com"
    },
    {
      "name": "Arya Mohanan",
      "email": "arya.mohanan@ibm.com"
    },
    {
      "name": "Abhilash Sivan",
      "email": "abhilash.sivan@ibm.com"
    }
  ],
  "scripts": {
    "audit": "lerna run audit --stream",
    "commit": "cz",
    "doctoc": "doctoc README.md packages/collector/README.md",
    "lint": "eslint .*.js *.js && npm run typecheck && lerna run lint --stream && eslint misc && eslint dockerfile-examples && eslint bin",
    "tekton:lint": "npx @ibm/tekton-lint .tekton/**/**/*.yaml .tekton/**/*.yaml .tekton/*.yaml",
    "postinstall": "chmod +x ./node_modules/husky/lib/bin.js && husky install && lerna run node_modules:exists",
    "precommit": "npm run doctoc",
    "coverage": "rm -rf ./coverage && c8 --all --reporter=lcov npm run ${npm_config_npm_command} && npm run open-coverage",
    "coverage-ci": "c8 --all --reporter=lcov --report-dir=./coverage/${npm_config_report_dir} npm run ${npm_config_npm_command}",
    "open-coverage": "open coverage/lcov-report/index.html",
    "prettier": "prettier --write 'misc/**/*.js' 'dockerfile-examples/**/*.js' 'bin/**/*.js' && lerna run prettier --stream",
    "reinstall-deps": "lerna clean -y && rm -rf node_modules && npm install --loglevel verbose",
    "test:ci:collector:general": "lerna run test:ci:general --stream --scope=@instana/collector",
    "test:ci:collector:tracing:frameworks": "lerna run test:ci:tracing:frameworks --stream --scope=@instana/collector",
    "test:ci:collector:tracing:database": "lerna run test:ci:tracing:database --stream --scope=@instana/collector",
    "test:ci:collector:tracing:cloud:aws:v2": "lerna run test:ci:tracing:cloud:aws:v2 --stream --scope=@instana/collector",
    "test:ci:collector:tracing:cloud:aws:v3": "lerna run test:ci:tracing:cloud:aws:v3 --stream --scope=@instana/collector",
    "test:ci:collector:tracing:cloud:gcp": "lerna run test:ci:tracing:cloud:gcp --stream --scope=@instana/collector",
    "test:ci:collector:tracing:cloud:azure": "lerna run test:ci:tracing:cloud:azure --stream --scope=@instana/collector",
    "test:ci:collector:tracing:messaging": "lerna run test:ci:tracing:messaging --stream --scope=@instana/collector",
    "test:ci:collector:tracing:protocols": "lerna run test:ci:tracing:protocols --stream --scope=@instana/collector",
    "test:ci:collector:tracing:general": "lerna run test:ci:tracing:general --stream --scope=@instana/collector",
    "test:ci:collector:tracing:misc": "lerna run test:ci:tracing:misc --stream --scope=@instana/collector",
    "test:ci:collector:tracing:logging": "lerna run test:ci:tracing:logging --stream --scope=@instana/collector",
    "test:ci:autoprofile": "lerna run test:ci --stream --scope=@instana/autoprofile",
    "test:ci:aws-fargate": "lerna run test:ci --stream --scope=@instana/aws-fargate",
    "test:ci:aws-lambda": "lerna run test:ci --stream --scope=@instana/aws-lambda",
    "test:ci:azure-container-services": "lerna run test:ci --stream --scope=@instana/azure-container-services",
    "test:ci:core": "lerna run test:ci --stream --scope=@instana/core",
    "test:ci:google-cloud-run": "lerna run test:ci --stream --scope=@instana/google-cloud-run",
    "test:ci:metrics-util": "lerna run test:ci --stream --scope=@instana/metrics-util",
    "test:ci:opentelemetry-exporter": "lerna run test:ci --stream --scope=@instana/opentelemetry-exporter",
    "test:ci:opentelemetry-sampler": "lerna run test:ci --stream --scope=@instana/opentelemetry-sampler",
    "test:ci:serverless": "lerna run test:ci --stream --scope=@instana/serverless",
    "test:ci:serverless-collector": "lerna run test:ci --stream --scope=@instana/serverless-collector",
    "test:ci:shared-metrics": "lerna run test:ci --stream --scope=@instana/shared-metrics",
    "test:ci:long-running": "lerna run test:ci:long-running --stream",
    "typecheck": "tsc",
    "verify": "lerna run verify --stream",
    "depcheck": "lerna exec 'npx depcheck --skip-missing --ignores nan,agent-base,@types/*' --stream"
  },
  "devDependencies": {
    "nan": "^2.22.2",
    "node-gyp": "^11.2.0",
    "event-loop-stats": "1.4.1",
    "gcstats.js": "1.0.0"
  },
  "overrides": {
    "event-loop-stats": {
      "nan": "^2.22.2"
    },
    "gcstats.js": {
      "nan": "^2.22.2"
    }
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
