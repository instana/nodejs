#!/bin/bash

set -o pipefail

PACKAGES=(
  $(<./packages.txt)
)

if [[ "${RECREATE:-}" == "false" ]]; then
  cd app
else
  echo -e "\nüßπ Creating the test app.\n"
  rm -rf app
  mkdir -p app
  cd app
  npm init -y >/dev/null
fi

if [[ "${ONLY_SCAN:-}" != "true" ]]; then
  if [[ "${MODE:-}" == "local" ]]; then
    echo -e "\nüíÅ‚Äç‚ôÄÔ∏è Installing local packages from local.\n"

    # Get the version from the package.json in ../../packages/collector
    CURRENT_VERSION=$(node -p "require('../../../packages/collector/package.json').version")

    instanaPkgs=(
      "collector"
      "serverless-collector"
      "aws-lambda"
      "aws-fargate"
      "google-cloud-run"
      "azure-container-services"
      # Adding the sub dependencies is important, because otherwise we cannot test changes.
      "core"
      "serverless"
      "shared-metrics"
    )

    cd "../../../packages"

    for pkg in "${instanaPkgs[@]}"; do
      cd "$pkg"
      rm -rf *.tgz
      npm pack
      cd ..
    done

    cd ../bin/vulnerability/app

    npm install ../../../packages/collector/instana-collector-${CURRENT_VERSION}.tgz --save >/dev/null
    npm install ../../../packages/serverless-collector/instana-serverless-collector-${CURRENT_VERSION}.tgz --save >/dev/null
    npm install ../../../packages/aws-lambda/instana-aws-lambda-${CURRENT_VERSION}.tgz --save >/dev/null
    npm install ../../../packages/aws-fargate/instana-aws-fargate-${CURRENT_VERSION}.tgz --save >/dev/null
    npm install ../../../packages/google-cloud-run/instana-google-cloud-run-${CURRENT_VERSION}.tgz --save >/dev/null
    npm install ../../../packages/azure-container-services/instana-azure-container-services-${CURRENT_VERSION}.tgz --save >/dev/null

    # Simulate that the sub dependencies got updated (override!)
    npm install ../../../packages/core/instana-core-${CURRENT_VERSION}.tgz --save >/dev/null
    npm install ../../../packages/serverless/instana-serverless-${CURRENT_VERSION}.tgz --save >/dev/null
    npm install ../../../packages/shared-metrics/instana-shared-metrics-${CURRENT_VERSION}.tgz --save >/dev/null
  else
    echo -e "\nüíÅ‚Äç‚ôÄÔ∏è Installing released packages.\n"
    npm install @instana/collector --save >/dev/null
    npm install @instana/serverless-collector --save >/dev/null
    npm install @instana/aws-lambda --save >/dev/null
    npm install @instana/aws-fargate --save >/dev/null
    npm install @instana/google-cloud-run --save >/dev/null
    npm install @instana/azure-container-services --save >/dev/null
  fi
fi

echo -e "üßê Checking for vulnerable packages\n"
echo -e "-----------------------------------\n"

for pkg in "${PACKAGES[@]}"; do
  out="$(npm ls --all "$pkg" 2>&1 || true)"

  if printf "%s" "$out" | grep -q "(empty)"; then
    echo "‚úÖ No direct dependency on $pkg"
    packageName="${pkg%@*}"
    out2="$(npm ls --all "$packageName" 2>&1 || true)"

    if ! printf "%s" "$out2" | grep -q "(empty)"; then
      echo "‚ö†Ô∏è BUT $packageName is a general (sub) dependency of Instana. Please investigate!"
      echo -e "\n"
      printf "%s" "$out2"
      echo -e "\n"
    else
      echo "‚úÖ No issues with $pkg"
    fi
  else
    printf "‚ùå COMPROMISED $pkg"
    echo -e "\n"
    printf "%s" "$out"
  fi
done
