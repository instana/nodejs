version: '2'
services:
  redis:
    image: redis:5.0.14
    ports:
      - 6379:6379

  mongo:
    image: mongo:4.1.13
    ports:
      - 27017:27017

  # # Elasticsearch 2.3
  # elasticsearch:
  #   image: elasticsearch:2.3.5
  #   ports:
  #     - 9200:9200

  # # Elasticsearch 5.6
  # elasticsearch:
  #   image: elasticsearch:5.6.16
  #   ports:
  #     - 9200:9200
  #   environment:
  #    discovery.type: single-node
  #    ES_JAVA_OPTS: "-Xms500m -Xmx500m"

  # # Elasticsearch 6.8
  # elasticsearch:
  #   image: elasticsearch:6.8.8
  #   ports:
  #     - 9200:9200
  #   environment:
  #    discovery.type: single-node
  #    ES_JAVA_OPTS: "-Xms500m -Xmx500m"

  # Elasticsearch 7 compatible with client v7
  # elasticsearch:
  #  image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
  #  ports:
  #    - 9200:9200
  #  environment:
  #    discovery.type: single-node
  #    ES_JAVA_OPTS: "-Xms500m -Xmx500m"

  # Elasticsearch 8 compatible with client v7 & v8
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.1
    ports:
      - 9200:9200
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms500m -Xmx500m"
      xpack.security.enabled: 'false'

  # Kafka test will sometimes fail because Zookeeper won't start due to
  # java.io.IOException: Unable to create data directory /opt/zookeeper-3.4.9/data/version-2, which seems to be a known issue:
  # -> https://issues.apache.org/jira/browse/ZOOKEEPER-1936
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    ports:
      - 9092:9092
      - 29092:29092
    depends_on:
      - "zookeeper"
    hostname: kafka0
    environment:

      KAFKA_LISTENERS: EXTERNAL://:9092,PLAINTEXT://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,EXTERNAL://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # Leave the internal listener mapped as PLAINTEXT to avoid issues in schema-registry:
      # https://github.com/confluentinc/schema-registry/issues/648#issuecomment-398032429
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT

      KAFKA_CREATE_TOPICS: "test:1:1,test-topic-1:1:1,test-topic-2:1:1,test-batch-topic-1:1:1,test-batch-topic-2:1:1,rdkafka-topic:1:1,kafka-avro-topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./bin:/nodejs-collector-bin
    command: ["/nodejs-collector-bin/wait-for-it.sh", "-s", "-t", "120", "zookeeper:2181", "--", "start-kafka.sh"]

  schema-registry:
    image: confluentinc/cp-schema-registry:4.1.0
    hostname: schema-registry
    depends_on:
      - "kafka"
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka0:29092"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry

  mysql:
    image: mysql:8.0.1
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: nodepw
      MYSQL_DATABASE: nodedb
      MYSQL_USER: node
      MYSQL_PASSWORD: nodepw
      MYSQL_ROOT_HOST: 0.0.0.0
    volumes:
      - ./packages/collector/test/tracing/database/mysql/conf.d:/etc/mysql/conf.d

  postgres:
    image: postgres:10.5
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: node
      POSTGRES_PASSWORD: nodepw
      POSTGRES_DB: nodedb

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-RC1-ubuntu-20.04
    ports:
      - 1433:1433
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: stanCanHazMsSQL1
      MSSQL_PID: Express

  rabbitmq:
    image: rabbitmq:3.7.8-alpine
    ports:
      - 5671:5671
      - 5672:5672

  nats:
    image: nats:2.9.14-linux
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222

  nats-streaming:
    image: nats-streaming:0.25.3-linux
    command: -p 4223 -m 8223
    ports:
      - 4223:4223
      - 8223:8223

  memcached:
    image: memcached:1.6.9
    ports:
      - 11211:11211

  # https://hub.docker.com/r/ibmcom/db2
  db2:
    image: ibmcom/db2
    privileged: true
    ports:
      - 58885:50000
    environment:
      - PERSISTENT_HOME=true
      - DBNAME=nodedb
      - BLU=false
      - HADR_ENABLED=false
      - ENABLE_ORACLE_COMPATIBILITY=false
      - UPDATEAVAIL=NO
      - SAMPLEDB=false
      - REPODB=false
      - IS_OSXFS=false
      - LICENSE=accept
      - DB2INSTANCE=node
      - DB2INST1_PASSWORD=nodepw
      - DB2_CREATE_DB_ON_PATH=true
      - STARTUP_MODE=restoreIfNotExists
    volumes:
       - ./db2/database:/database
       - ./db2/db2_data:/db2_data
